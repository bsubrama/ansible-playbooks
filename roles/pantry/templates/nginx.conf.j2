user www-data;
pid /var/run/nginx.pid;

worker_processes {{ nginx_worker_processes }};
worker_rlimit_nofile {{ nginx_worker_connections * 5 }};

events {
    worker_connections {{ nginx_worker_connections }};
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout {{ nginx_keepalive_timeout }};
    types_hash_max_size 2048;
    client_max_body_size 500m;

    include /etc/nginx/mime.types;
    
    # Additional mime types
    types {
        application/x-bittorrent torrent;
    }

    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    log_format realIPLog '$remote_addr forwarded for $http_x_real_ip - $remote_user [$time_local]  '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" $request_time';

    access_log /var/log/nginx/access.log realIPLog;
    error_log /var/log/nginx/error.log;

    # TODO: have logs written to memory-mapped files?

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Buffer Settings
    ##

    # client_body_buffer_size # TODO: handles the client request buffer size, meaning the incoming request body
    # proxy_buffers # TODO: deal with the response from your upstream
    # (Notice that there is an upper limit for what nginx will buffer, even on disk, before it transfer it synchronously to the client)

    # proxy_buffers

    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
